{"ast":null,"code":"import _classCallCheck from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/src/containers/Portal/Portal.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\nimport PageContainer from '../PageContainer';\nimport Nav from '../../components/Nav';\nimport TimerForm from '../../components/TimerForm';\nimport TimerSessionsView from '../../components/TimerSessionsView';\n\nvar Portal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Portal).apply(this, arguments));\n  }\n\n  _createClass(Portal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getTimerSessions(this.props.user.username);\n    }\n  }, {\n    key: \"submit\",\n    value: function submit(values) {\n      var _this = this;\n\n      var newValues = Object.assign({}, values, {\n        \"createdAt\": new Date().toString(),\n        \"username\": this.props.user.username\n      });\n      this.props.postNewTimerSession(newValues, function () {\n        alert('Your session has been saved!\\n\\n Please view your sessions by clicking on the button in the left column.');\n\n        _this.props.getTimerSessions(_this.props.user.username);\n      });\n    }\n  }, {\n    key: \"onViewChange\",\n    value: function onViewChange() {\n      this.props.changeView(this.props.view);\n    }\n  }, {\n    key: \"onSelectedDate\",\n    value: function onSelectedDate(date) {\n      this.props.setTimerSessionViewDate(date);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          view = _this$props.view;\n\n      if (!user.isLoggedIn) {\n        this.props.history.push('/');\n      }\n\n      return React.createElement(PageContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        username: this.props.user.username,\n        onViewChange: this.onViewChange.bind(this),\n        view: view['view'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, view['view'] === 'new' && React.createElement(TimerForm, {\n        onSubmit: this.submit.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), view['view'] === 'view' && React.createElement(TimerSessionsView, {\n        sessions: this.props.sessions.sessions,\n        selectedDate: this.props.sessions.selectedDate,\n        onSelectedDate: this.onSelectedDate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    view: state.view,\n    user: state.user,\n    sessions: state.sessions\n  };\n};\n\nexport default connect(mapStateToProps, actions)(Portal);","map":{"version":3,"sources":["/home/iman/Documents/Code/Pento/tech-challenge-time/client/src/containers/Portal/Portal.js"],"names":["React","connect","actions","PageContainer","Nav","TimerForm","TimerSessionsView","Portal","props","getTimerSessions","user","username","values","newValues","Object","assign","Date","toString","postNewTimerSession","alert","changeView","view","date","setTimerSessionViewDate","isLoggedIn","history","push","onViewChange","bind","submit","sessions","selectedDate","onSelectedDate","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;;IAEMC,M;;;;;;;;;;;;;wCAEgB;AAClB,WAAKC,KAAL,CAAWC,gBAAX,CAA4B,KAAKD,KAAL,CAAWE,IAAX,CAAgBC,QAA5C;AACD;;;2BAEMC,M,EAAQ;AAAA;;AACb,UAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,MAAlB,EAA0B;AAAE,qBAAa,IAAII,IAAJ,GAAWC,QAAX,EAAf;AAAsC,oBAAY,KAAKT,KAAL,CAAWE,IAAX,CAAgBC;AAAlE,OAA1B,CAAlB;AACA,WAAKH,KAAL,CAAWU,mBAAX,CAA+BL,SAA/B,EAA0C,YAAM;AAC9CM,QAAAA,KAAK,CAAC,0GAAD,CAAL;;AACA,QAAA,KAAI,CAACX,KAAL,CAAWC,gBAAX,CAA4B,KAAI,CAACD,KAAL,CAAWE,IAAX,CAAgBC,QAA5C;AACD,OAHD;AAID;;;mCAEc;AACb,WAAKH,KAAL,CAAWY,UAAX,CAAsB,KAAKZ,KAAL,CAAWa,IAAjC;AACD;;;mCAEcC,I,EAAM;AACnB,WAAKd,KAAL,CAAWe,uBAAX,CAAmCD,IAAnC;AACD;;;6BAEQ;AAAA,wBACgB,KAAKd,KADrB;AAAA,UACCE,IADD,eACCA,IADD;AAAA,UACOW,IADP,eACOA,IADP;;AAEP,UAAI,CAACX,IAAI,CAACc,UAAV,EAAsB;AAAE,aAAKhB,KAAL,CAAWiB,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AAA8B;;AACtD,aACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWE,IAAX,CAAgBC,QAA/B;AAAyC,QAAA,YAAY,EAAE,KAAKgB,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAvD;AAAqF,QAAA,IAAI,EAAEP,IAAI,CAAC,MAAD,CAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIA,IAAI,CAAC,MAAD,CAAJ,KAAiB,KAAjB,IACA,oBAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,KAAKQ,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAIIP,IAAI,CAAC,MAAD,CAAJ,KAAiB,MAAjB,IACA,oBAAC,iBAAD;AACE,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWsB,QAAX,CAAoBA,QADhC;AAEE,QAAA,YAAY,EAAE,KAAKtB,KAAL,CAAWsB,QAAX,CAAoBC,YAFpC;AAGE,QAAA,cAAc,EAAE,KAAKC,cAAL,CAAoBJ,IAApB,CAAyB,IAAzB,CAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CAJF,CADF,CADF;AAqBD;;;;EA9CkB5B,KAAK,CAACiC,S;;AAiD3B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjC,SAAO;AACLd,IAAAA,IAAI,EAAEc,KAAK,CAACd,IADP;AAELX,IAAAA,IAAI,EAAEyB,KAAK,CAACzB,IAFP;AAGLoB,IAAAA,QAAQ,EAAEK,KAAK,CAACL;AAHX,GAAP;AAKD,CAND;;AAQA,eAAe7B,OAAO,CAACiC,eAAD,EAAkBhC,OAAlB,CAAP,CAAkCK,MAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions';\n\nimport PageContainer from '../PageContainer';\nimport Nav from '../../components/Nav';\nimport TimerForm from '../../components/TimerForm';\nimport TimerSessionsView from '../../components/TimerSessionsView';\n\nclass Portal extends React.Component {\n\n  componentDidMount() {\n    this.props.getTimerSessions(this.props.user.username)\n  }\n\n  submit(values) {\n    const newValues = Object.assign({}, values, { \"createdAt\": new Date().toString(), \"username\": this.props.user.username })\n    this.props.postNewTimerSession(newValues, () => {\n      alert('Your session has been saved!\\n\\n Please view your sessions by clicking on the button in the left column.');\n      this.props.getTimerSessions(this.props.user.username)\n    })\n  }\n\n  onViewChange() {\n    this.props.changeView(this.props.view);\n  }\n\n  onSelectedDate(date) {\n    this.props.setTimerSessionViewDate(date);\n  }\n\n  render() {\n    const { user, view } = this.props\n    if (!user.isLoggedIn) { this.props.history.push('/') }\n    return (\n      <PageContainer>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <Nav username={this.props.user.username} onViewChange={this.onViewChange.bind(this)} view={view['view']} />\n          </div>\n          <div className=\"col-9\">\n            { view['view'] === 'new' &&\n              <TimerForm onSubmit={this.submit.bind(this)} />\n            }\n            { view['view'] === 'view' &&\n              <TimerSessionsView\n                sessions={this.props.sessions.sessions}\n                selectedDate={this.props.sessions.selectedDate}\n                onSelectedDate={this.onSelectedDate.bind(this)}\n              />\n            }\n          </div>\n        </div>\n      </PageContainer>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    view: state.view,\n    user: state.user,\n    sessions: state.sessions\n  }\n}\n\nexport default connect(mapStateToProps, actions)(Portal);\n"]},"metadata":{},"sourceType":"module"}