{"ast":null,"code":"/**\n * User Actions\n * @desc All actions associated with the timer\n */\nimport axios from '../utils/axios';\nimport { NEW_TIMER_SESSION_URL, TIMER_SESSIONS_URL } from '../constants/timer/endpoints';\nimport { SET_TIMER_SESSIONS, SET_TIMER_SESSIONS_VIEW_DATE } from '../constants/timer/reducerTypes';\n/**\n * Save new timer session\n * @param { name, username, time, createdAt }\n */\n\nexport function postNewTimerSession(data) {\n  return function (dispatch) {\n    axios.post(NEW_TIMER_SESSION_URL, data).then(function (response) {\n      console.log(response);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}\n/**\n * Get all timer session for an user\n * @param { username }\n */\n\nexport function getTimerSessions(data) {\n  return function (dispatch) {\n    axios.get(TIMER_SESSIONS_URL + '/' + data).then(function (response) {\n      dispatch({\n        type: SET_TIMER_SESSIONS,\n        data: response.data.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}\n/**\n * Set date to render timer sessions overview\n * @param { date }\n */\n\nexport function setTimerSessionViewDate(data) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_TIMER_SESSIONS_VIEW_DATE,\n      data: data\n    });\n  };\n}","map":{"version":3,"sources":["/home/iman/Documents/Code/Pento/tech-challenge-time/client/src/actions/timerActions.js"],"names":["axios","NEW_TIMER_SESSION_URL","TIMER_SESSIONS_URL","SET_TIMER_SESSIONS","SET_TIMER_SESSIONS_VIEW_DATE","postNewTimerSession","data","dispatch","post","then","response","console","log","catch","err","getTimerSessions","get","type","setTimerSessionViewDate"],"mappings":"AAAA;;;;AAIA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,qBAAT,EAAgCC,kBAAhC,QAA0D,8BAA1D;AACA,SAASC,kBAAT,EAA6BC,4BAA7B,QAAiE,iCAAjE;AAEA;;;;;AAIA,OAAO,SAASC,mBAAT,CAA6BC,IAA7B,EAAmC;AACzC,SAAO,UAAUC,QAAV,EAAoB;AACzBP,IAAAA,KAAK,CAACQ,IAAN,CAAWP,qBAAX,EAAkCK,IAAlC,EACEG,IADF,CACO,UAAAC,QAAQ,EAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,KAHF,EAIEG,KAJF,CAIQ,UAAAC,GAAG,EAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KANF;AAOD,GARD;AASA;AAEA;;;;;AAID,OAAO,SAASC,gBAAT,CAA0BT,IAA1B,EAAgC;AACrC,SAAO,UAAUC,QAAV,EAAoB;AACzBP,IAAAA,KAAK,CAACgB,GAAN,CAAUd,kBAAkB,GAAG,GAArB,GAA2BI,IAArC,EACEG,IADF,CACO,UAAAC,QAAQ,EAAI;AAChBH,MAAAA,QAAQ,CAAC;AAAEU,QAAAA,IAAI,EAAEd,kBAAR;AAA4BG,QAAAA,IAAI,EAAEI,QAAQ,CAACJ,IAAT,CAAcA;AAAhD,OAAD,CAAR;AACD,KAHF,EAIEO,KAJF,CAIQ,UAAAC,GAAG,EAAI;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KANF;AAOD,GARD;AASD;AAED;;;;;AAIA,OAAO,SAASI,uBAAT,CAAiCZ,IAAjC,EAAuC;AAC5C,SAAO,UAAUC,QAAV,EAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEU,MAAAA,IAAI,EAAEb,4BAAR;AAAsCE,MAAAA,IAAI,EAAEA;AAA5C,KAAD,CAAR;AACD,GAFD;AAGD","sourcesContent":["/**\n * User Actions\n * @desc All actions associated with the timer\n */\nimport axios from '../utils/axios';\nimport { NEW_TIMER_SESSION_URL, TIMER_SESSIONS_URL } from '../constants/timer/endpoints';\nimport { SET_TIMER_SESSIONS, SET_TIMER_SESSIONS_VIEW_DATE } from '../constants/timer/reducerTypes';\n\n/**\n * Save new timer session\n * @param { name, username, time, createdAt }\n */\nexport function postNewTimerSession(data) {\n return function (dispatch) {\n   axios.post(NEW_TIMER_SESSION_URL, data)\n    .then(response => {\n      console.log(response);\n    })\n    .catch(err => {\n      console.log(err);\n    })\n }\n}\n\n /**\n  * Get all timer session for an user\n  * @param { username }\n  */\nexport function getTimerSessions(data) {\n  return function (dispatch) {\n    axios.get(TIMER_SESSIONS_URL + '/' + data)\n     .then(response => {\n       dispatch({ type: SET_TIMER_SESSIONS, data: response.data.data })\n     })\n     .catch(err => {\n       console.log(err);\n     })\n  }\n}\n\n/**\n * Set date to render timer sessions overview\n * @param { date }\n */\nexport function setTimerSessionViewDate(data) {\n  return function (dispatch) {\n    dispatch({ type: SET_TIMER_SESSIONS_VIEW_DATE, data: data })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}