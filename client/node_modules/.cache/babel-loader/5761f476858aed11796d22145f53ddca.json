{"ast":null,"code":"/**\n * User Actions\n * @desc All actions associated with the user's account\n */\nimport axios from '../utils/axios';\nimport { LOGIN_URL, REGISTER_URL } from '../constants/user/endpoints';\nimport { SET_USER, SET_LOGIN_ERROR } from '../constants/user/reducerTypes';\n/**\n * Get authentication token for user\n * @param { username, password }\n */\n\nexport function postLoginUser(data, callback) {\n  return function (dispatch) {\n    delete data['type'];\n    axios.post(LOGIN_URL, data).then(function (response) {\n      dispatch({\n        type: SET_USER,\n        data: response.data.user\n      });\n      axios.defaults.headers = Object.assign({}, axios.defaults.headers, {\n        'Authorization': \"Bearer \".concat(response.data.user.token)\n      });\n      callback();\n    }).catch(function (err) {\n      dispatch({\n        type: SET_LOGIN_ERROR,\n        data: '*Invalid username or password, please try again!'\n      });\n    });\n  };\n}\n/**\n * Register user\n * @param { username, password }\n */\n\nexport function postRegisterUser(data, callback) {\n  return function (dispatch) {\n    delete data['type'];\n    axios.post(REGISTER_URL, data).then(function (response) {\n      callback(data);\n    }).catch(function (err) {\n      if (err.response.data.message) dispatch({\n        type: SET_LOGIN_ERROR,\n        data: '*' + err.response.data.message\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/home/iman/Documents/Code/Pento/tech-challenge-time/client/src/actions/userActions.js"],"names":["axios","LOGIN_URL","REGISTER_URL","SET_USER","SET_LOGIN_ERROR","postLoginUser","data","callback","dispatch","post","then","response","type","user","defaults","headers","Object","assign","token","catch","err","postRegisterUser","message"],"mappings":"AAAA;;;;AAIA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,6BAAxC;AACA,SAASC,QAAT,EAAmBC,eAAnB,QAA0C,gCAA1C;AAEA;;;;;AAIA,OAAO,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,QAA7B,EAAuC;AAC5C,SAAO,UAAUC,QAAV,EAAoB;AACzB,WAAOF,IAAI,CAAC,MAAD,CAAX;AACAN,IAAAA,KAAK,CAACS,IAAN,CAAWR,SAAX,EAAsBK,IAAtB,EACGI,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAET,QAAR;AAAkBG,QAAAA,IAAI,EAAEK,QAAQ,CAACL,IAAT,CAAcO;AAAtC,OAAD,CAAR;AACAb,MAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,GAAyBC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBjB,KAAK,CAACc,QAAN,CAAeC,OAAjC,EACvB;AAAE,0CAA2BJ,QAAQ,CAACL,IAAT,CAAcO,IAAd,CAAmBK,KAA9C;AAAF,OADuB,CAAzB;AAGAX,MAAAA,QAAQ;AACT,KAPH,EAQGY,KARH,CAQS,UAAAC,GAAG,EAAI;AACZZ,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAER,eAAR;AAAyBE,QAAAA,IAAI,EAAE;AAA/B,OAAD,CAAR;AACD,KAVH;AAWD,GAbD;AAcD;AAED;;;;;AAIA,OAAO,SAASe,gBAAT,CAA0Bf,IAA1B,EAAgCC,QAAhC,EAA0C;AAC/C,SAAO,UAAUC,QAAV,EAAoB;AACzB,WAAOF,IAAI,CAAC,MAAD,CAAX;AACAN,IAAAA,KAAK,CAACS,IAAN,CAAWP,YAAX,EAAyBI,IAAzB,EACGI,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBJ,MAAAA,QAAQ,CAACD,IAAD,CAAR;AACD,KAHH,EAIGa,KAJH,CAIS,UAAAC,GAAG,EAAI;AACZ,UAAIA,GAAG,CAACT,QAAJ,CAAaL,IAAb,CAAkBgB,OAAtB,EAA+Bd,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAER,eAAR;AAAyBE,QAAAA,IAAI,EAAE,MAAMc,GAAG,CAACT,QAAJ,CAAaL,IAAb,CAAkBgB;AAAvD,OAAD,CAAR;AAChC,KANH;AAOD,GATD;AAUD","sourcesContent":["/**\n * User Actions\n * @desc All actions associated with the user's account\n */\nimport axios from '../utils/axios';\nimport { LOGIN_URL, REGISTER_URL } from '../constants/user/endpoints';\nimport { SET_USER, SET_LOGIN_ERROR } from '../constants/user/reducerTypes';\n\n/**\n * Get authentication token for user\n * @param { username, password }\n */\nexport function postLoginUser(data, callback) {\n  return function (dispatch) {\n    delete data['type']\n    axios.post(LOGIN_URL, data)\n      .then(response => {\n        dispatch({ type: SET_USER, data: response.data.user })\n        axios.defaults.headers = Object.assign({}, axios.defaults.headers,\n          { 'Authorization': `Bearer ${response.data.user.token}` }\n        );\n        callback()\n      })\n      .catch(err => {\n        dispatch({ type: SET_LOGIN_ERROR, data: '*Invalid username or password, please try again!' })\n      });\n  }\n}\n\n/**\n * Register user\n * @param { username, password }\n */\nexport function postRegisterUser(data, callback) {\n  return function (dispatch) {\n    delete data['type']\n    axios.post(REGISTER_URL, data)\n      .then(response => {\n        callback(data);\n      })\n      .catch(err => {\n        if (err.response.data.message) dispatch({ type: SET_LOGIN_ERROR, data: '*' + err.response.data.message })\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}