{"ast":null,"code":"import _classCallCheck from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/iman/Documents/Code/Pento/tech-challenge-time/client/src/components/TimerSessionsView/timersessionsview.js\";\nimport React from 'react';\nimport TimerSessionViewDate from '../TimerSessionViewDate';\nimport TimerSessionCard from './timersessioncard';\n\nvar TimerSessionsView =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TimerSessionsView, _React$Component);\n\n  function TimerSessionsView() {\n    _classCallCheck(this, TimerSessionsView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(TimerSessionsView).apply(this, arguments));\n  }\n\n  _createClass(TimerSessionsView, [{\n    key: \"renderTimeSessions\",\n    value: function renderTimeSessions() {\n      if (Object.keys(this.props.selectedDate).length === 0) {\n        return this.renderTimeSessionsView(this.props.sessions);\n      } else if (this.props.selectedDate.year !== undefined && this.props.selectedDate.month !== undefined) {\n        return this.renderFilteredTimeSessions(this.props.selectedDate);\n      }\n    }\n  }, {\n    key: \"renderFilteredTimeSessions\",\n    value: function renderFilteredTimeSessions(date) {\n      var filteredSessions = null;\n\n      if (date.day !== undefined) {\n        var filterDate = new Date(date.year, date.month, date.day);\n        filteredSessions = this.props.sessions.filter(function (session) {\n          var sessionDate = new Date(session.createdAt);\n          return sessionDate.getFullYear() === filterDate.getFullYear() && sessionDate.getMonth() === filterDate.getMonth() && sessionDate.getDate() === filterDate.getDate();\n        });\n      } else {\n        var filterStartDate = new Date(date.year, date.month, 1);\n        var filterEndDate = new Date(date.year, date.month + 1, 0);\n        filteredSessions = this.props.sessions.filter(function (session) {\n          var sessionDate = new Date(session.createdAt);\n          return sessionDate >= filterStartDate && sessionDate <= filterEndDate;\n        });\n        console.log(filteredSessions);\n      }\n\n      return this.renderTimeSessionsView(filteredSessions);\n    }\n  }, {\n    key: \"renderTimeSessionsView\",\n    value: function renderTimeSessionsView(sessions) {\n      return sessions.map(function (session, key) {\n        return React.createElement(TimerSessionCard, {\n          key: key,\n          name: session.name,\n          time: session.time,\n          createdAt: session.createdAt,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(TimerSessionViewDate, {\n        onSelectedDate: this.props.onSelectedDate.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), this.props.sessions && this.renderTimeSessions());\n    }\n  }]);\n\n  return TimerSessionsView;\n}(React.Component);\n\nexport default TimerSessionsView;","map":{"version":3,"sources":["/home/iman/Documents/Code/Pento/tech-challenge-time/client/src/components/TimerSessionsView/timersessionsview.js"],"names":["React","TimerSessionViewDate","TimerSessionCard","TimerSessionsView","Object","keys","props","selectedDate","length","renderTimeSessionsView","sessions","year","undefined","month","renderFilteredTimeSessions","date","filteredSessions","day","filterDate","Date","filter","session","sessionDate","createdAt","getFullYear","getMonth","getDate","filterStartDate","filterEndDate","console","log","map","key","name","time","onSelectedDate","bind","renderTimeSessions","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport TimerSessionViewDate from '../TimerSessionViewDate';\nimport TimerSessionCard from './timersessioncard';\n\nclass TimerSessionsView extends React.Component {\n\n  renderTimeSessions() {\n    if (Object.keys(this.props.selectedDate).length === 0) { return this.renderTimeSessionsView(this.props.sessions) }\n    else if (this.props.selectedDate.year !== undefined && this.props.selectedDate.month !== undefined) {\n      return this.renderFilteredTimeSessions(this.props.selectedDate);\n    }\n  }\n\n  renderFilteredTimeSessions(date) {\n    let filteredSessions = null;\n    if (date.day !== undefined) {\n      const filterDate = new Date(date.year, date.month, date.day)\n      filteredSessions = this.props.sessions.filter((session) => {\n        const sessionDate = new Date(session.createdAt)\n        return (sessionDate.getFullYear() === filterDate.getFullYear()) && (sessionDate.getMonth() === filterDate.getMonth()) && (sessionDate.getDate() === filterDate.getDate())\n      })\n    }\n    else {\n      const filterStartDate = new Date(date.year, date.month, 1)\n      const filterEndDate = new Date(date.year, date.month + 1, 0)\n      filteredSessions = this.props.sessions.filter((session) => {\n        const sessionDate = new Date(session.createdAt)\n        return (sessionDate >= filterStartDate) && (sessionDate <= filterEndDate)\n      })\n      console.log(filteredSessions)\n    }\n    return this.renderTimeSessionsView(filteredSessions);\n  }\n\n  renderTimeSessionsView(sessions) {\n    return sessions.map((session, key) => {\n      return (\n        <TimerSessionCard key={key} name={session.name} time={session.time} createdAt={session.createdAt} />\n      )\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"row\">\n        <TimerSessionViewDate onSelectedDate={this.props.onSelectedDate.bind(this)} />\n        { this.props.sessions && this.renderTimeSessions() }\n      </div>\n    )\n  }\n\n}\n\nexport default TimerSessionsView\n"]},"metadata":{},"sourceType":"module"}